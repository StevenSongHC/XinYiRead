<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xinyiread.dao.WriterDAO">  
	
    <resultMap type="Writer" id="writerResultMap">
        <id column="wid" property="id" />
        <result column="w_pen_name" property="penName" />
        <result column="w_contact" property="contact" />
        <result column="w_intro" property="intro" />
        <result column="w_current_project" property="currentProject" />
        <result column="w_like_count" property="likeCount" />
        <association column="uid" property="user" javaType="User">
            <id column="uid" property="id" />
            <result column="u_name" property="name" />
	        <result column="u_password" property="password" />
	        <result column="u_portrait" property="portrait" />
	        <result column="u_email" property="email" />
	        <result column="u_is_email_show" property="isEmailShow" />
	        <result column="u_join_date" property="joinDate" />
	        <result column="u_last_login_date" property="lastLoginDate" />
        </association>
    </resultMap>
    
    <insert id="insert" parameterType="Writer" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO writer(uid,w_pen_name,w_contact,w_intro,w_current_project,w_like_count)
        VALUES (#{user.id},#{penName},#{contact},#{intro},#{currentProject},#{likeCount})
    </insert>
    
    <update id="update">
        UPDATE writer SET
            w_pen_name=#{penName},
            w_contact=#{contact},
            w_intro=#{intro},
            w_current_project=#{currentProject},
            w_like_count=#{likeCount}
        WHERE wid=#{id}
    </update>
    
    <select id="getWriterList" resultMap="writerResultMap">
		SELECT writer.*, user.* 
		FROM writer, user
		WHERE user.uid=writer.uid
    </select>
    
    <select id="getWriterById" parameterType="java.lang.Long" resultMap="writerResultMap">
        SELECT writer.*, user.* 
		FROM writer, user
		WHERE user.uid=writer.uid
        	AND writer.wid=#{id}
    </select>
    
    <select id="getWriterByUser" parameterType="User" resultMap="writerResultMap">
        SELECT writer.*, user.* 
		FROM writer, user
		WHERE user.uid=writer.uid
        	AND writer.uid=#{id}
    </select>
    
    <select id="getWriterByPenName" parameterType="java.lang.String" resultMap="writerResultMap">
        SELECT writer.*, user.* 
		FROM writer, user
		WHERE user.uid=writer.uid
        	AND writer.w_pen_name=#{penName}
    </select>
    
    <update id="addLikeCount" parameterType="java.lang.Long">
        UPDATE writer SET
            w_like_count=w_like_count+1
        WHERE wid=#{id}
    </update>
    
    <select id="getUserCommendWriterHistory" resultType="java.util.Map">
        SELECT *
		FROM commend_writer_history
		WHERE uid=#{uid}
        	AND wid=#{wid}
    </select>
    
    <insert id="insertCommendHistory">
        INSERT INTO commend_writer_history(uid,wid)
        VALUES (#{uid},#{wid})
    </insert>
    
    <select id="getWriterArticleBriefList" resultType="java.util.Map">
        SELECT aid AS id,a_title AS title,a_update_time AS update_time,a_is_complete AS is_complete,a_is_censored AS is_censored
		FROM article
		WHERE wid=#{wid}
		<if test="isComplete != null">
		    AND a_is_complete=#{isComplete}
		</if>
		<if test="isCensored != null">
		    AND a_is_censored=#{isCensored}
		</if>
		ORDER BY update_time DESC
    </select>
    
</mapper>